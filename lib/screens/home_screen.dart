// Import c√°c package c·∫ßn thi·∫øt
import 'package:flutter/material.dart';
import '../service/api_service.dart';
import 'movie_detail_screen.dart';
import 'add_movie_screen.dart';
import 'login_screen.dart';

/// M√†n h√¨nh ch√≠nh hi·ªÉn th·ªã danh s√°ch phim
class HomeScreen extends StatefulWidget {
  final String token; // Token x√°c th·ª±c ng∆∞·ªùi d√πng
  final String email; // Email ng∆∞·ªùi d√πng ƒë·ªÉ ki·ªÉm tra quy·ªÅn admin

  const HomeScreen({super.key, required this.token, required this.email});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  late Future<List<dynamic>> _moviesFuture; // Future l∆∞u danh s√°ch phim

  // Ki·ªÉm tra ng∆∞·ªùi d√πng c√≥ ph·∫£i admin hay kh√¥ng (ch·ªâ admin m·ªõi ƒë∆∞·ª£c th√™m/s·ª≠a phim)
  bool get isAdmin => widget.email == 'mei@email.com';

  @override
  void initState() {
    super.initState();
    _loadMovies(); // Load danh s√°ch phim khi kh·ªüi t·∫°o m√†n h√¨nh
  }

  // H√†m g·ªçi API ƒë·ªÉ l·∫•y danh s√°ch phim
  void _loadMovies() {
    _moviesFuture = ApiService.getAllMovies();
  }

  // H√†m reload danh s√°ch phim sau khi th√™m/s·ª≠a phim
  Future<void> _refreshMovies() async {
    setState(() {
      _loadMovies();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // Thanh AppBar ph√≠a tr√™n
      appBar: AppBar(
        title: const Text('üé¨ Movie App'),
        actions: [
          // N·∫øu l√† admin th√¨ hi·ªán n√∫t th√™m phim
          if (isAdmin)
            IconButton(
              icon: const Icon(Icons.add),
              onPressed: () async {
                // M·ªü m√†n h√¨nh th√™m phim
                await Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (_) => AddMovieScreen(token: widget.token),
                  ),
                );
                _refreshMovies(); // Reload sau khi th√™m phim
              },
            ),
          // N√∫t ƒëƒÉng xu·∫•t
          IconButton(
            icon: const Icon(Icons.logout),
            onPressed: () {
              Navigator.pushReplacement(
                context,
                MaterialPageRoute(builder: (_) => const LoginScreen()),
              );
            },
          ),
        ],
      ),

      // Ph·∫ßn n·ªôi dung ch√≠nh d√πng FutureBuilder ƒë·ªÉ ch·ªù load d·ªØ li·ªáu phim
      body: FutureBuilder<List<dynamic>>(
        future: _moviesFuture,
        builder: (context, snapshot) {
          // Khi ƒëang loading
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Center(
              child: CircularProgressIndicator(
                color: Color.fromARGB(255, 54, 174, 244),
              ),
            );
          }
          // Khi c√≥ l·ªói
          else if (snapshot.hasError) {
            return Center(child: Text('L·ªói: ${snapshot.error}'));
          }
          // Khi kh√¥ng c√≥ d·ªØ li·ªáu
          else if (!snapshot.hasData || snapshot.data!.isEmpty) {
            return const Center(child: Text('Kh√¥ng c√≥ phim n√†o.'));
          }

          // Khi c√≥ d·ªØ li·ªáu phim
          final movies = snapshot.data!;
          return GridView.builder(
            padding: const EdgeInsets.all(12),
            gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
              crossAxisCount: 2, // 2 c·ªôt
              childAspectRatio: 0.75,
              crossAxisSpacing: 10,
              mainAxisSpacing: 10,
            ),
            itemCount: movies.length,
            itemBuilder: (_, index) {
              final movie = movies[index];
              return GestureDetector(
                onTap: () async {
                  // Khi ng∆∞·ªùi d√πng nh·∫•n v√†o m·ªôt phim, ƒëi·ªÅu h∆∞·ªõng sang m√†n h√¨nh chi ti·∫øt
                  await Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (_) => MovieDetailScreen(
                        id: movie['id'],         // ID phim
                        token: widget.token,     // Token ng∆∞·ªùi d√πng
                        isAdmin: isAdmin,        // Ki·ªÉm tra quy·ªÅn
                        movie: movie,            // D·ªØ li·ªáu phim
                      ),
                    ),
                  );
                  _refreshMovies(); // Reload danh s√°ch sau khi quay v·ªÅ
                },
                child: Container(
                  decoration: BoxDecoration(
                    color: const Color.fromARGB(255, 59, 138, 228),
                    borderRadius: BorderRadius.circular(12),
                    border: Border.all(
                      color: const Color.fromARGB(255, 81, 168, 240),
                    ),
                  ),
                  padding: const EdgeInsets.all(8),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      // Hi·ªÉn th·ªã ·∫£nh phim
                      Expanded(
                        child: Container(
                          width: double.infinity,
                          decoration: BoxDecoration(
                            color: Colors.grey[900],
                            borderRadius: BorderRadius.circular(8),
                          ),
                          child: movie['imageUrl'] != null &&
                              movie['imageUrl'].toString().isNotEmpty
                              ? ClipRRect(
                            borderRadius: BorderRadius.circular(8),
                            child: Image.network(
                              movie['imageUrl'],
                              fit: BoxFit.cover,
                            ),
                          )
                              : ClipRRect(
                            borderRadius: BorderRadius.circular(8),
                            child: Image.network(
                              // ·∫¢nh m·∫∑c ƒë·ªãnh n·∫øu kh√¥ng c√≥ ·∫£nh
                              'https://simg.zalopay.com.vn/zlp-website/assets/phim_trung_hay_60_426502c2bb.jpg',
                              fit: BoxFit.cover,
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(height: 8),
                      // T√™n phim
                      Text(
                        movie['name'] ?? 'Kh√¥ng r√µ t√™n',
                        maxLines: 1,
                        overflow: TextOverflow.ellipsis,
                        style: const TextStyle(
                          fontSize: 16,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      // Ng√¥n ng·ªØ phim
                      Text(
                        'Ng√¥n ng·ªØ: ${movie['language'] ?? 'Kh√¥ng r√µ'}',
                        style: const TextStyle(color: Colors.grey),
                      ),
                    ],
                  ),
                ),
              );
            },
          );
        },
      ),
    );
  }
}
