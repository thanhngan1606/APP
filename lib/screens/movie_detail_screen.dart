// Import c√°c package c·∫ßn thi·∫øt
import 'package:flutter/material.dart';
import '../service/api_service.dart';
import 'edit_movie_screen.dart';

/// M√†n h√¨nh chi ti·∫øt phim
class MovieDetailScreen extends StatefulWidget {
  final int id;                          // ID c·ªßa phim
  final String token;                    // Token x√°c th·ª±c ng∆∞·ªùi d√πng
  final bool isAdmin;                    // X√°c ƒë·ªãnh quy·ªÅn admin
  final Map<String, dynamic> movie;     // D·ªØ li·ªáu phim (t·∫°m th·ªùi)

  const MovieDetailScreen({
    super.key,
    required this.id,
    required this.token,
    required this.isAdmin,
    required this.movie,
  });

  @override
  State<MovieDetailScreen> createState() => _MovieDetailScreenState();
}

class _MovieDetailScreenState extends State<MovieDetailScreen> {
  Map<String, dynamic>? detail; // D·ªØ li·ªáu chi ti·∫øt phim t·ª´ API
  bool isLoading = true;        // Tr·∫°ng th√°i t·∫£i d·ªØ li·ªáu

  @override
  void initState() {
    super.initState();
    fetchDetail(); // G·ªçi API l·∫•y chi ti·∫øt phim khi m·ªü m√†n h√¨nh
  }

  // H√†m g·ªçi API ƒë·ªÉ l·∫•y chi ti·∫øt phim
  Future<void> fetchDetail() async {
    try {
      final res = await ApiService.getMovieDetail(widget.id, widget.token);
      setState(() {
        detail = res;
        isLoading = false;
      });
    } catch (e) {
      setState(() {
        isLoading = false;
      });
      // Hi·ªÉn th·ªã l·ªói n·∫øu API th·∫•t b·∫°i
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('L·ªói t·∫£i chi ti·∫øt: $e')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('üìΩ Chi ti·∫øt phim'),
        actions: [
          // N·∫øu l√† admin th√¨ hi·ªÉn th·ªã n√∫t s·ª≠a
          if (widget.isAdmin)
            IconButton(
              icon: const Icon(Icons.edit),
              onPressed: () async {
                // ƒêi·ªÅu h∆∞·ªõng sang m√†n h√¨nh ch·ªânh s·ª≠a phim
                final updated = await Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (_) => EditMovieScreen(
                      movie: detail ?? widget.movie,
                      token: widget.token,
                    ),
                  ),
                );

                // N·∫øu s·ª≠a th√†nh c√¥ng th√¨ reload l·∫°i d·ªØ li·ªáu
                if (updated == true) {
                  fetchDetail();
                }
              },
            ),
        ],
      ),

      // N·ªôi dung ch√≠nh
      body: isLoading
          ? const Center(
        child: CircularProgressIndicator(color: Colors.red),
      )
          : SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Hi·ªÉn th·ªã ·∫£nh phim ho·∫∑c ·∫£nh m·∫∑c ƒë·ªãnh
            detail?['imageUrl'] != null &&
                (detail?['imageUrl'] as String).isNotEmpty
                ? ClipRRect(
              borderRadius: BorderRadius.circular(12),
              child: Image.network(
                detail!['imageUrl'],
                height: 220,
                width: double.infinity,
                fit: BoxFit.cover,
              ),
            )
                : ClipRRect(
              borderRadius: BorderRadius.circular(12),
              child: Image.network(
                'https://simg.zalopay.com.vn/zlp-website/assets/phim_trung_hay_60_426502c2bb.jpg',
                height: 220,
                width: double.infinity,
                fit: BoxFit.cover,
              ),
            ),
            const SizedBox(height: 20),

            // T√™n phim
            Text(
              detail?['name'] ?? 'Kh√¥ng r√µ t√™n',
              style: const TextStyle(
                fontSize: 26,
                fontWeight: FontWeight.bold,
                color: Colors.black,
              ),
            ),
            const SizedBox(height: 10),

            // Ng√¥n ng·ªØ
            Row(
              children: [
                const Icon(Icons.language, color: Colors.redAccent),
                const SizedBox(width: 8),
                Text(
                  'Ng√¥n ng·ªØ: ${detail?['language'] ?? '-'}',
                  style: const TextStyle(color: Colors.black),
                ),
              ],
            ),
            const SizedBox(height: 8),

            // ƒê√°nh gi√°
            Row(
              children: [
                const Icon(Icons.star, color: Colors.redAccent),
                const SizedBox(width: 8),
                Text(
                  'ƒê√°nh gi√°: ${detail?['rating'] ?? '-'}',
                  style: const TextStyle(color: Colors.black),
                ),
              ],
            ),
            const SizedBox(height: 8),

            // Gi√° v√©
            Row(
              children: [
                const Icon(Icons.attach_money, color: Colors.redAccent),
                const SizedBox(width: 8),
                Text(
                  'Gi√° v√©: \$${detail?['ticketPrice'] ?? '0'}',
                  style: const TextStyle(color: Colors.black),
                ),
              ],
            ),
            const SizedBox(height: 8),

            // Ng√†y chi·∫øu
            Row(
              children: [
                const Icon(Icons.date_range, color: Colors.redAccent),
                const SizedBox(width: 8),
                Text(
                  'Ng√†y chi·∫øu: ${detail?['playingDate']?.toString().substring(0, 10) ?? '-'}',
                  style: const TextStyle(color: Colors.black),
                ),
              ],
            ),
            const SizedBox(height: 8),

            // Gi·ªù chi·∫øu
            Row(
              children: [
                const Icon(Icons.access_time, color: Colors.redAccent),
                const SizedBox(width: 8),
                Text(
                  'Gi·ªù chi·∫øu: ${detail?['playingTime']?.toString().substring(11, 16) ?? '-'}',
                  style: const TextStyle(color: Colors.black),
                ),
              ],
            ),
            const SizedBox(height: 16),

            // M√¥ t·∫£ phim
            const Text(
              'M√¥ t·∫£:',
              style: TextStyle(fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 6),
            Text(
              detail?['description'] ?? 'Kh√¥ng c√≥ m√¥ t·∫£.',
              style: const TextStyle(color: Colors.black),
            ),
          ],
        ),
      ),
    );
  }
}
