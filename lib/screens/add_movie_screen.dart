// Import th∆∞ vi·ªán Flutter v√† API service
import 'package:flutter/material.dart';
import '../service/api_service.dart';

/// M√†n h√¨nh th√™m phim m·ªõi (ch·ªâ d√†nh cho Admin)
class AddMovieScreen extends StatefulWidget {
  final String token; // Token x√°c th·ª±c g·ª≠i t·ª´ HomeScreen

  const AddMovieScreen({super.key, required this.token});

  @override
  State<AddMovieScreen> createState() => _AddMovieScreenState();
}

class _AddMovieScreenState extends State<AddMovieScreen> {
  // Key d√πng ƒë·ªÉ x√°c th·ª±c form
  final _formKey = GlobalKey<FormState>();
  // Controller cho √¥ nh·∫≠p t√™n phim
  final nameCtrl = TextEditingController();
  // Controller cho √¥ nh·∫≠p URL ·∫£nh
  final imageCtrl = TextEditingController();

  /// H√†m x·ª≠ l√Ω th√™m phim khi nh·∫•n n√∫t
  void handleAdd() async {
    // N·∫øu form kh√¥ng h·ª£p l·ªá th√¨ tho√°t
    if (!_formKey.currentState!.validate()) return;

    // G·ªçi API th√™m phim
    final success = await ApiService.addMovie(
      token: widget.token,
      name: nameCtrl.text,
      imageUrl: imageCtrl.text,
    );

    if (success) {
      // Th√¥ng b√°o th√†nh c√¥ng
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('üéâ Th√™m phim th√†nh c√¥ng')),
      );

      // Ch·ªù 1 gi√¢y r·ªìi quay v·ªÅ m√†n h√¨nh tr∆∞·ªõc ƒë√≥
      await Future.delayed(const Duration(seconds: 1));
      if (mounted) Navigator.pop(context);
    } else {
      // Th√¥ng b√°o th·∫•t b·∫°i
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('‚ùå Th√™m phim th·∫•t b·∫°i')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context); // L·∫•y theme hi·ªán t·∫°i

    return Scaffold(
      appBar: AppBar(
        title: const Text('Th√™m phim m·ªõi'),
        backgroundColor: Color(0xFF1976D2),
        foregroundColor: Colors.white,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Form(
          key: _formKey,
          child: ListView(
            children: [
              // Tr∆∞·ªùng nh·∫≠p t√™n phim
              TextFormField(
                controller: nameCtrl,
                decoration: const InputDecoration(
                  labelText: 'T√™n phim',
                  labelStyle: TextStyle(color: Color(0xFF1976D2)),
                  enabledBorder: OutlineInputBorder(
                    borderSide: BorderSide(color: Color(0xFF1976D2)),
                    borderRadius: BorderRadius.all(Radius.circular(14)),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderSide: BorderSide(color: Color(0xFF1976D2), width: 2),
                    borderRadius: BorderRadius.all(Radius.circular(14)),
                  ),
                ),
                style: const TextStyle(color: Color(0xFF1976D2)),
                cursorColor: Color(0xFF1976D2),
                validator: (val) => val!.isEmpty ? 'Kh√¥ng ƒë·ªÉ tr·ªëng' : null,
              ),
              const SizedBox(height: 12),
              // Tr∆∞·ªùng nh·∫≠p URL ·∫£nh phim (t√πy ch·ªçn)
              TextFormField(
                controller: imageCtrl,
                decoration: const InputDecoration(
                  labelText: 'URL h√¨nh ·∫£nh (tu·ª≥ ch·ªçn)',
                  labelStyle: TextStyle(color: Color(0xFF1976D2)),
                  enabledBorder: OutlineInputBorder(
                    borderSide: BorderSide(color: Color(0xFF1976D2)),
                    borderRadius: BorderRadius.all(Radius.circular(14)),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderSide: BorderSide(color: Color(0xFF1976D2), width: 2),
                    borderRadius: BorderRadius.all(Radius.circular(14)),
                  ),
                ),
                style: const TextStyle(color: Color(0xFF1976D2)),
                cursorColor: Color(0xFF1976D2),
              ),
              const SizedBox(height: 24),
              // N√∫t th√™m phim
              ElevatedButton(
                onPressed: handleAdd,
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color(0xFF1976D2),
                  foregroundColor: Colors.white,
                  padding: const EdgeInsets.symmetric(vertical: 14),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(14),
                  ),
                  elevation: 3,
                ),
                child: const Text('Th√™m phim', style: TextStyle(fontSize: 16)),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
